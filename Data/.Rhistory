LDataMolten$Date <- gsub(".Second.session.after.15.Feb.", "", LDataMolten$Date)
LDataMolten$Date <- gsub("March", "Mar", LDataMolten$Date)
LDataMolten$Date <- gsub("\\.", "-", LDataMolten$Date)
LDataMolten$Date <- gsub("-1$", "", LDataMolten$Date)
LDataMolten$Date <- gsub("Ju-", "Jul-", LDataMolten$Date)
LDataMolten$Date <- gsub("MARCH-13-20-APRIL-9-2002", "13-Mar-2002", LDataMolten$Date)
# Drop missing speeches
LDataMolten <- DropNA(LDataMolten, "LaughterCount")
LDataMolten$DateStandard <- dmy(LDataMolten$Date)
LDataMolten$LaughterCount <- as.numeric(LDataMolten$LaughterCount)
ggplot(LDataMolten, aes(DateStandard, LaughterCount)) +
geom_point() +
xlab("") +
theme_bw()
View(LDataMolten)
LDataMolten$Date <- gsub("17-Feb-200", "17-Feb-2000", LDataMolten$Date)
# Drop missing speeches
LDataMolten <- DropNA(LDataMolten, "LaughterCount")
LDataMolten$DateStandard <- dmy(LDataMolten$Date)
LDataMolten$LaughterCount <- as.numeric(LDataMolten$LaughterCount)
View(LDataMolten)
LData <- read.csv("~/Dropbox/Fed_Speeches_Data/Laughter/FedLaughterCounts.csv")
# Melt long
LDataMolten <- melt(LData, id.vars = c("Date"))
# Clean up
LDataMolten <- LDataMolten[, c("variable", "value")]
names(LDataMolten) <- c("Date", "LaughterCount")
LDataMolten$Date <- gsub("X", "", LDataMolten$Date)
LDataMolten$Date <- gsub("ly", "", LDataMolten$Date)
LDataMolten$Date <- gsub("\\.\\.", ".", LDataMolten$Date)
LDataMolten$Date <- gsub("rurary", "", LDataMolten$Date)
LDataMolten$Date <- gsub("ruary", "", LDataMolten$Date)
LDataMolten$Date <- gsub(".Second.session.after.15.Feb.", "", LDataMolten$Date)
LDataMolten$Date <- gsub("March", "Mar", LDataMolten$Date)
LDataMolten$Date <- gsub("\\.", "-", LDataMolten$Date)
LDataMolten$Date <- gsub("-1$", "", LDataMolten$Date)
LDataMolten$Date <- gsub("Ju-", "Jul-", LDataMolten$Date)
LDataMolten$Date <- gsub("MARCH-13-20-APRIL-9-2002", "13-Mar-2002", LDataMolten$Date)
LDataMolten$Date <- gsub("17-Feb-200$", "17-Feb-2000", LDataMolten$Date)
LDataMolten <- DropNA(LDataMolten, "LaughterCount")
LDataMolten$DateStandard <- dmy(LDataMolten$Date)
LDataMolten$LaughterCount <- as.numeric(LDataMolten$LaughterCount)
ggplot(LDataMolten, aes(DateStandard, LaughterCount)) +
geom_point() +
xlab("") +
theme_bw()
Test <- cpt.mean(LDataMolten$LaughterCount, method = "PELT")
plot(Test, type = "l")
?sort
LDataMolten <- LDataMolten[order(LDataMolten[, 3]), ]
View(LDataMolten)
Test <- cpt.mean(LDataMolten$LaughterCount, method = "PELT")
plot(Test, type = "l")
ggplot(LDataMolten, aes(DateStandard, LaughterCount)) +
geom_point() +
xlab("") +
theme_bw()
ggplot(LDataMolten, aes(DateStandard, LaughterCount)) +
geom_point() +
stat_smooth() +
xlab("") +
theme_bw()
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
View(LData)
View(LData)
names(LDataSub)
names(LData)
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
View(LDataSub)
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
LDataSub$Oversight <- LDataSub$Oversight[is.na(Oversight)] <- 0
LDataSub$Oversight[is.na(Oversight)] <- 0
names(LDataSub)
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
View(LDataSub)
library(lubridate)
LDataSub$DateStandard <- dmy(LDataSub$Date)
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
View(LDataSub)
library(DataCombine)
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
View(LDataSub)
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
View(LDataSub)
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$MembersPres <- numeric(LDataSub$MembersPres)
View(LDataSub)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
View(LDataSub)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
View(LDataSub)
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
View(LDataSub)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
View(LDataSub)
library(changepoint)
Test <- cpt.mean(LDataSub$MembersPres, method = "PELT")
LDataSub <- DropNA(LDataSub, "MembersPres")
Test <- cpt.mean(LDataSub$MembersPres, method = "PELT")
plot(Test, type = "l")
ggplot(LDataSub, aes(DateStandard, MembersPres)) +
geom_point() +
stat_smooth() +
xlab("") +
theme_bw()
Test <- cpt.var(LDataSub$MembersPres, method = "PELT")
plot(Test, type = "l")
library(survival)
library(simPH)
library(foreign)
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df=3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.1, 1.67, by = .1)
Xl = seq(0, 1.66, by = .1))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df=3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.1, 1.67, by = .1),
Xl = seq(0, 1.66, by = .1))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df=3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.1, 1.67, by = .1),
Xl = seq(0, 1.66, by = .1))
summary(coxrs)
names(coxrs$pterms)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.1, 1.67, by = .1),
Xl = seq(0, 1.66, by = .1))
length(seq(.1, 1.67, by = .1))
length(seq(0, 1.66, by = .1)))
length(seq(0, 1.66, by = .1))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.1, 1.67, by = .1),
Xl = seq(0, 1.57, by = .1))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(.01, 1.67, by = .01),
Xl = seq(0, 1.66, by = .01))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(0, 1.67, by = .05)
)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0, 1.67, by = .05)
)
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(0.1, 1.67, by = .1),
Xl = seq(0, 1.56, by = .1))
simGG(Sim)
summary(mydata$se_high_fuel_within_top_10)
hist(mydata$se_high_fuel_within_top_10)
hist(log(mydata$se_high_fuel_within_top_10))
hist(exp(mydata$se_high_fuel_within_top_10))
hist(log(mydata$se_high_fuel_within_top_10 + 0.0001))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = c(1.2, 1.67))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1.2, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.3, 1.4, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1))
simGG(Sim, )
library(survival)
library(simPH)
library(foreign)
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
mydata$logSEHighFuelWithin <- log()
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1))
simGG(Sim, )
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1), spin = TRUE)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.4, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.4))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2))
simGG(Sim, smoother = "ln")
hist(mydata$se_high_fuel_within_top_10)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 0.5))
simGG(Sim, smoother = "ln")
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 0.5))
simGG(Sim, smoother = "lm")
summary(coxrs)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 1.67))
simGG(Sim, smoother = "lm")
summary(Sim$qi)
names(sim)
names(Sim)
summary(Sim$QI)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1.67))
summary(Sim$QI)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(0.1, 1.67, by = .1),
Xl = seq(0, 1.56, by = .1))
simGG(Sim, smoother = "lm")
hist(mydata$se_high_fuel_within_top_10)
density(mydata$se_high_fuel_within_top_10)
simGG(Sim)
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LD <- LDataSub
#### Graphing Fun ####
# Graph median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
library(changepoint)
Test <- cpt.mean(LD$LaughMedian)
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
Test <- cpt.mean(LD$LaughMedian)
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
LD <- LDataSub
#### Graphing Fun ####
# Graph median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
library(changepoint)
Test <- cpt.mean(LD$Median)
plot(Test, type = "l")
Test <- cpt.mean(LD$LaughMedian)
plot(Test, type = "l")
library(ggplot2)
ggplot(LD, aes(DateStandard, LaughMedian)) +
geom_point() +
stat_smooth() +
xlab("") +
theme_bw()
Test <- cpt.mean(LD$MembersMedian)
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, type = "l")
?changepoint
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, type = "l")
plot(Test)
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test)
?ts
200/12
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, ylab = "Monthly Median Laughter")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, ylab = "Monthly Median Laughter")
?cpt.mean
Test <- cpt.mean(LD$MembPresMedian, method= "PELT")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian, method= "SegNeigh")
Test <- cpt.mean(LD$MembPresMedian, method= "BinSeg")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.meanvar(LD$LaughMedian, method = "BinSeg")
plot(Test, ylab = "Monthly Median Laughter")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian, method = "BinSeg")
plot(Test, ylab = "Monthly Median Attendance")
names(Test)
fix(Test)
cpts.ts(Test)
data(discoveries)
fix(discoveries)
?ts
View(LD)
View(LD)
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
View(LDMonth)
ChangeLaugth <- cpt.meanvar(LDMonth$LaughMedian, method = "BinSeg")
plot(ChangeLaugth, ylab = "Monthly Median Laughter")
ChangePres <- cpt.mean(LDMonth$MembPresMedian, method = "BinSeg")
plot(ChangePres, ylab = "Monthly Median Attendance")
ChangeLaugth <- cpt.meanvar(LDMonth$LaughMedian)
plot(ChangeLaugth, ylab = "Monthly Median Laughter")
View(LDMonth)
library(repmis)
?LoadAndCite
LoadandCite
?LoadandCite
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
View(LDataSub)
library(foreign)
library(survival)
library(simPH)
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 0.5, by = .1))
simGG(Sim)
simGG(Sim, smoother = "lm")
simGG(Sim)
simGG(Sim, smoother = "loess")
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 0.5, by = .1))
simGG(Sim, smoother = "loess")
structure(list(vector = structure(c(0.990076335162317, 0.402075450572458,
0.591600355949734, 0.862062033693553, 0.654339853857822, 1, 0.0831107002143983,
0.206704239455726, 0.411357215318565, 0.228894660803784, 0.313446698875534,
0.0731217951260019, 0.0624280818260802, 0.0624280818260801, 0.0473134967769225
), .Names = c("Stefano Pagliari", "Irene Spagna", "Andrew Baker",
"Kevin Young", "Eleni Tsingou", "Eric Helleiner", "Christopher Gandrud",
"Robert Cox", "Dan Drezner", "Huxley Leng-Young", "Duncan Wigan",
"That giant Russian dog that barks at Huxley", "Happie the Dog",
"Big spotted dog down the street", "Scrappy dog at the Antique shop on the corner"
)), value = 4.83783014142868, options = structure(list(bmat = "I",
n = 15L, which = "LA", nev = 1L, tol = 0, ncv = 0L, ldv = 0L,
ishift = 1L, maxiter = 3000L, nb = 1L, mode = 1L, start = 1L,
sigma = 0, sigmai = 0, info = 0L, iter = 5L, nconv = 1L,
numop = 23L, numopb = 0L, numreo = 19L), .Names = c("bmat",
"n", "which", "nev", "tol", "ncv", "ldv", "ishift", "maxiter",
"nb", "mode", "start", "sigma", "sigmai", "info", "iter", "nconv",
"numop", "numopb", "numreo"))), .Names = c("vector", "value",
"options"))
?save.image
save.image("~/Desktop/Test.RData")
load("~/Dropbox/Fed Hearings/here.rdata")
fix(spooky)
Test1 <- spooky$vector[1]
Test1
Test1 <- spooky$vector[,1]
Test1 <- spooky$vector[1,]
Test1 <- spooky$vector$names
fix(spooky)
Test1 <- data.frame(spooky$vector)
View(Test1)
NamesValue <- data.frame(spooky$vector)
?row.names
NamesValue$names <- row.names(NamesValue)
View(NamesValue)
?cumsum
cumsum(1:10)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
MainMonth <- read.csv("MainMonth.csv", stringsAsFactors = FALSE)
# Drop if no hearings
MainMonth <- MainMonth[-1:-2, ]
MainMonth <- MainMonth[-193:-197, ]
# Create multivariate matrix for monthly data
ScrutVars <- c("MembPresMeanNoF", "LaughMeanNoF", "TestCountMonthNoF")
MinVars <- c("LaughMeanNoF")
e.divGG(data = MainMonth, CoVars = ScrutVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 6, PlotCoVars = NULL)
library(digest)
library(devtools)
source_gist("5675688")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
MainMonth <- read.csv("MainMonth.csv", stringsAsFactors = FALSE)
# Drop if no hearings
MainMonth <- MainMonth[-1:-2, ]
MainMonth <- MainMonth[-193:-197, ]
# Create multivariate matrix for monthly data
ScrutVars <- c("MembPresMeanNoF", "LaughMeanNoF", "TestCountMonthNoF")
MinVars <- c("LaughMeanNoF")
e.divGG(data = MainMonth, CoVars = ScrutVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 6, PlotCoVars = NULL)
e.divGG(data = MainMonth, CoVars = ScrutVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 6, PlotCoVars = MinVars)
e.divGG(data = MainMonth, CoVars = ScrutVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 6, PlotCoVars = "TestCountMonthNoF")
e.divGG(data = MainMonth, CoVars = ScrutVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 12, PlotCoVars = "TestCountMonthNoF")
EconVars <- c("CPIAUCNS", "GDPC96", "U6RATE")
EconMonthMatrix <- as.matrix(MainMonth[, EconVars], R = 699, sig.lvl = 0.1)
e.divGG(data = MainMonth, CoVars = EconVars, TimeVar = "MonthYear",
R = 699, sig.lvl = 0.05, min.size = 24, PlotCoVars = "U6RATE")
