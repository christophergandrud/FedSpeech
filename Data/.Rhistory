hist(log(mydata$se_high_fuel_within_top_10 + 0.0001))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = c(1.2, 1.67))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1.2, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.3, 1.4, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1))
simGG(Sim, )
library(survival)
library(simPH)
library(foreign)
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
mydata$logSEHighFuelWithin <- log()
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1))
simGG(Sim, )
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 1.67, by = .1), spin = TRUE)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.4, 1.67))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2, 1.4))
simGG(Sim)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1, 1.2))
simGG(Sim, smoother = "ln")
hist(mydata$se_high_fuel_within_top_10)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 0.5))
simGG(Sim, smoother = "ln")
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 0.5))
simGG(Sim, smoother = "lm")
summary(coxrs)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(0.1, 1.67))
simGG(Sim, smoother = "lm")
summary(Sim$qi)
names(sim)
names(Sim)
summary(Sim$QI)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = c(1.67))
summary(Sim$QI)
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Hazard Ratio",
Xj = seq(0.1, 1.67, by = .1),
Xl = seq(0, 1.56, by = .1))
simGG(Sim, smoother = "lm")
hist(mydata$se_high_fuel_within_top_10)
density(mydata$se_high_fuel_within_top_10)
simGG(Sim)
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LD <- LDataSub
#### Graphing Fun ####
# Graph median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
library(changepoint)
Test <- cpt.mean(LD$LaughMedian)
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
Test <- cpt.mean(LD$LaughMedian)
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
LD <- LDataSub
#### Graphing Fun ####
# Graph median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
library(changepoint)
Test <- cpt.mean(LD$Median)
plot(Test, type = "l")
Test <- cpt.mean(LD$LaughMedian)
plot(Test, type = "l")
library(ggplot2)
ggplot(LD, aes(DateStandard, LaughMedian)) +
geom_point() +
stat_smooth() +
xlab("") +
theme_bw()
Test <- cpt.mean(LD$MembersMedian)
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, type = "l")
?changepoint
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, type = "l")
plot(Test)
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test)
?ts
200/12
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, ylab = "Monthly Median Laughter")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian)
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.meanvar(LD$LaughMedian)
plot(Test, ylab = "Monthly Median Laughter")
?cpt.mean
Test <- cpt.mean(LD$MembPresMedian, method= "PELT")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian, method= "SegNeigh")
Test <- cpt.mean(LD$MembPresMedian, method= "BinSeg")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.meanvar(LD$LaughMedian, method = "BinSeg")
plot(Test, ylab = "Monthly Median Laughter")
plot(Test, ylab = "Monthly Median Attendance")
Test <- cpt.mean(LD$MembPresMedian, method = "BinSeg")
plot(Test, ylab = "Monthly Median Attendance")
names(Test)
fix(Test)
cpts.ts(Test)
data(discoveries)
fix(discoveries)
?ts
View(LD)
View(LD)
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
View(LDMonth)
ChangeLaugth <- cpt.meanvar(LDMonth$LaughMedian, method = "BinSeg")
plot(ChangeLaugth, ylab = "Monthly Median Laughter")
ChangePres <- cpt.mean(LDMonth$MembPresMedian, method = "BinSeg")
plot(ChangePres, ylab = "Monthly Median Attendance")
ChangeLaugth <- cpt.meanvar(LDMonth$LaughMedian)
plot(ChangeLaugth, ylab = "Monthly Median Laughter")
View(LDMonth)
library(repmis)
?LoadAndCite
LoadandCite
?LoadandCite
library(lubridate)
library(DataCombine)
# Import data
LData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
View(LDataSub)
library(foreign)
library(survival)
library(simPH)
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 0.5, by = .1))
simGG(Sim)
simGG(Sim, smoother = "lm")
simGG(Sim)
simGG(Sim, smoother = "loess")
mydata <- read.dta("~/Desktop/SWF_World_Politics.dta")
coxrs <- coxph(Surv(begin, end, y_tna) ~  pspline(se_high_fuel_within_top_10, df=3) + pspline(reserves_gdp, df=3) + pspline(gdp_2005_nse, df=3) + cluster(imfcode), robust=TRUE, na.action=na.exclude, mydata, control=coxph.control(eps=1e-09, iter.max=500, outer.max=500))
Sim <- coxsimSpline(coxrs, bspline = "pspline(se_high_fuel_within_top_10, df = 3)",
bdata = mydata$se_high_fuel_within_top_10,
qi = "Relative Hazard",
Xj = seq(0.1, 0.5, by = .1))
simGG(Sim, smoother = "loess")
structure(list(vector = structure(c(0.990076335162317, 0.402075450572458,
0.591600355949734, 0.862062033693553, 0.654339853857822, 1, 0.0831107002143983,
0.206704239455726, 0.411357215318565, 0.228894660803784, 0.313446698875534,
0.0731217951260019, 0.0624280818260802, 0.0624280818260801, 0.0473134967769225
), .Names = c("Stefano Pagliari", "Irene Spagna", "Andrew Baker",
"Kevin Young", "Eleni Tsingou", "Eric Helleiner", "Christopher Gandrud",
"Robert Cox", "Dan Drezner", "Huxley Leng-Young", "Duncan Wigan",
"That giant Russian dog that barks at Huxley", "Happie the Dog",
"Big spotted dog down the street", "Scrappy dog at the Antique shop on the corner"
)), value = 4.83783014142868, options = structure(list(bmat = "I",
n = 15L, which = "LA", nev = 1L, tol = 0, ncv = 0L, ldv = 0L,
ishift = 1L, maxiter = 3000L, nb = 1L, mode = 1L, start = 1L,
sigma = 0, sigmai = 0, info = 0L, iter = 5L, nconv = 1L,
numop = 23L, numopb = 0L, numreo = 19L), .Names = c("bmat",
"n", "which", "nev", "tol", "ncv", "ldv", "ishift", "maxiter",
"nb", "mode", "start", "sigma", "sigmai", "info", "iter", "nconv",
"numop", "numopb", "numreo"))), .Names = c("vector", "value",
"options"))
?save.image
save.image("~/Desktop/Test.RData")
load("~/Dropbox/Fed Hearings/here.rdata")
fix(spooky)
Test1 <- spooky$vector[1]
Test1
Test1 <- spooky$vector[,1]
Test1 <- spooky$vector[1,]
Test1 <- spooky$vector$names
fix(spooky)
Test1 <- data.frame(spooky$vector)
View(Test1)
NamesValue <- data.frame(spooky$vector)
?row.names
NamesValue$names <- row.names(NamesValue)
View(NamesValue)
?cumsum
cumsum(1:10)
library(changepoint)
library(digest)
library(devtools)
# Load quarter_year and quarter_sum functions
source_gist("5500733")
source_gist("5660246")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
Main <- read.csv("Main.csv")
# Drop if no hearings
Main <- Main[-1:-2, ]
Main <- Main[-193:-197, ]
#### -------------- Change Point Analysis Monthly ----------------- ####
## Testimony Month Count
TestPerMonthTS <- ts(Main$TestCountMonth, start = c(1997, 3), frequency = 12)
ChangeCount <- cpt.meanvar(TestPerMonthTS, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month", xlab = "")
## Members Present Median
PresTS <- ts(Main$MembPresMedian, start = c(1997, 3), frequency = 12)
ChangePres <- cpt.mean(PresTS, method = "BinSeg")
plot(ChangePres, ylab = "Monthly Median Attendance", xlab = "")
## Laughter Median
LaughTS <- ts(Main$LaughMedian, start = c(1997, 3), frequency = 12)
ChangeLaugh <- cpt.meanvar(LaughTS)
plot(ChangeLaugh, ylab = "Monthly Median Laughter", xlab = "")
#### Median Members Present/Number of Hearings
attach(Main)
MembersHearings <- MembPresMedian/TestCountMonth
detach(Main)
MembersHearings[is.nan(MembersHearings)] <- 0
MembersTS <- ts(MembersHearings, start = 1997)
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
plot(ChangePresTest)
# Drop non-fully observed quarters
MainQt <- Main[c(-1, -191, -192), ]
# Testimony Quarterly Count
TestQuarter <- quarter_sum(data = MainQt, Var = "TestCountMonth",
TimeVar = "MonthYear")
TestPerQuarterTS <- ts(TestQuarter[, 2], start = c(1997, 2), frequency = 4)
ChangeCountQt <- cpt.meanvar(TestPerQuarterTS, method = "BinSeg")
plot(ChangeCountQt, ylab = "Number of Hearings per Quarter", xlab = "")
PresQuarter <- quarter_sum(data = MainQt, Var = "MembPresMedian",
TimeVar = "MonthYear", NewVar = "PresSum")
PresQuarter <- merge(TestQuarter, PresQuarter, by = "Quarter")
PresQuarter$AverageMedianPres <- PresQuarter[, 3]/PresQuarter[, 2]
PresQuarter$AverageMedianPres[is.nan(PresQuarter$AverageMedianPres)] <- 0
PresPerQuarterTS <- ts(PresQuarter[, 4], start = c(1997, 2), frequency = 4)
ChangeCountQt <- cpt.meanvar(PresPerQuarterTS, method = "BinSeg")
plot(ChangeCountQt, ylab = "Monthly Median Attendance Averaged by Quarterly Hearing Count", xlab = "")
# Laughter Quarterly
LaughterQuarter <- quarter_sum(data = MainQt, Var = "LaughMedian",
TimeVar = "MonthYear")
LaughPerQuarterTS <- ts(LaughQuarter[, 2], start = c(1997, 2), frequency = 4)
ChangeCountQt <- cpt.meanvar(LaughPerQuarterTS, method = "BinSeg")
plot(ChangeCountQt, ylab = "Monthly Sum of the Median Members Present per Quarter", xlab = "")
LaughtQuarter <- quarter_sum(data = MainQt, Var = "LaughMedian",
TimeVar = "MonthYear")
LaughPerQuarterTS <- ts(LaughQuarter[, 2], start = c(1997, 2), frequency = 4)
ChangeCountQt <- cpt.meanvar(LaughPerQuarterTS, method = "BinSeg")
LaughQuarter <- quarter_sum(data = MainQt, Var = "LaughMedian",
TimeVar = "MonthYear")
LaughPerQuarterTS <- ts(LaughQuarter[, 2], start = c(1997, 2), frequency = 4)
ChangeCountQt <- cpt.meanvar(LaughPerQuarterTS, method = "BinSeg")
plot(ChangeCountQt, ylab = "Monthly Sum of the Median Members Present per Quarter", xlab = "")
plot(ChangeCountQt, ylab = "Quarterly Sum of Median Montly Laughter per Quarter", xlab = "")
library(lubridate)
library(DataCombine)
library(plyr)
library(digest)
library(devtools)
# Load quarter_year
source_gist("5500733")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### --------- Clean ----------------------------------------- ####
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### ------------ Per Month ------------------------------------ ####
# Median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
LD$Dummy <- 1
LD <- ddply(LD, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### ------------ Per Quarter ---------------------------------- ####
# Create Quarter variable
LD$Quarter <- quarter_year(LD[, "DateStandard"], with_year = TRUE)
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- LDataSub
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
LD$Dummy <- 1
LD <- ddply(LD, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### ------------ Per Quarter ---------------------------------- ####
# Create Quarter variable
LD$Quarter <- quarter_year(LD[, "DateStandard"], with_year = TRUE)
View(LD)
View(LD)
View(LDataSub)
###############
# Clean Congressional Testimony Laughter Data
# Christopher Gandrud
# 27 May 2013
###############
library(lubridate)
library(DataCombine)
library(plyr)
library(digest)
library(devtools)
# Load quarter_year
source_gist("5500733")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### --------- Clean ----------------------------------------- ####
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### ------------ Per Month ------------------------------------ ####
# Median members per month
LDM <- LDataSub
# Create MonthYear variable
LDM$MonthYear <- floor_date(LDM$DateStandard, "month")
LDM <- ddply(LDM, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LDM <- ddply(LDM, .(MonthYear), transform, LaughMedian = median(LaughCount))
LDM$Dummy <- 1
LDM <- ddply(LDM, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMMonth <- LDM[!duplicated(LDM[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### ------------ Per Quarter ---------------------------------- ####
# Drop non-fully observed quarters
LDQt <- LDDataSub[c(-1, -2), ]
LDQt <- LDataSub[c(-1, -2), ]
View(LDQt)
LDQt$Quarter <- quarter_year(LDQt[, "DateStandard"], with_year = TRUE)
#### --------- Clean ----------------------------------------- ####
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### ------------ Per Month ------------------------------------ ####
# Median members per month
LDM <- LDataSub
# Create MonthYear variable
LDM$MonthYear <- floor_date(LDM$DateStandard, "month")
LDM <- ddply(LDM, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LDM <- ddply(LDM, .(MonthYear), transform, LaughMedian = median(LaughCount))
LDM$Dummy <- 1
LDM <- ddply(LDM, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LDM[!duplicated(LDM[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
LDQt <- LDataSub[c(-1, -2), ]
# Create Quarter variable
LDQt$Quarter <- quarter_year(LDQt[, "DateStandard"], with_year = TRUE)
LDQt <- ddply(LDQt, .(Quarter), transform, MembPresMedian = median(MembersPres))
LDQt <- ddply(LDQt, .(Quarter), transform, LaughMedian = median(LaughCount))
LDQt$Dummy <- 1
LDQt <- ddply(LDQt, .(Quarter), transform, TestCountQuarter = sum(Dummy))
# Create Month Only data
LDQtonth <- LDQt[!duplicated(LDQt[, "Quarter"]), ]
# Clean up
LDMonth <- LDMonth[, c("Quarter", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
LDMonth <- LDMonth[, c("Quarter", "MembPresMedian",
"LaughMedian", "TestCountQuarter")]
LDQt <- ddply(LDQt, .(Quarter), transform, LaughMedian = median(LaughCount))
names(LDQt)
LDMonth <- LDMonth[, c("Quarter", "MembPresMedian",
"LaughMedian", "TestCountQuarter")]
LDQt <- LDQt[!duplicated(LDQt[, "Quarter"]), ]
# Clean up
LDQt <- LDQt[, c("Quarter", "MembPresMedian",
"LaughMedian", "TestCountQuarter")]
View(LDQt)
