Q2 <- c(NA, Variable[-length(Variable)])
Q3 <- c(NA, Q2[-length(Variable)])
LagsDF <- data.frame(data[, 1], Q2, Q3)
names(LagsDF) <- c("DateField", "Q2", "Q3")
TempComb <- FillIn(data, LagsDF, Var1 = Var, Var2 = "Q2", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb <- FillIn(TempComb, LagsDF, Var1 = Var, Var2 = "Q3", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb
}
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPC96")
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPDEF")
# Create Year-on-Year percent change variables
YearChange <- function (data, Var, NewVar)
{
Temp <- slide(data = data, Var = Var, slideBy = - 12)
Temp$TempVar <- ((Temp[, Var] - Temp[, length(Temp)])/Temp[, Var]) * 100
RMVar <- length(Temp) - 1
Temp <- Temp[, -RMVar]
Temp <- rename(Temp, c("TempVar" = NewVar))
Temp
}
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "CPIAUCNS", NewVar = "CPIAUCNSPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "PCEPI",
NewVar = "PCEPIPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "GDPC96",
NewVar = "GDPC96Percent")
# Save as EconData.csv
write.csv(CombinedEconSlim,
file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/FREDEconData.csv")
View(CombinedEconSlim)
View(CombinedEconSlim)
####----------- Variable Description Table ----------####
ColNames <- names(CombinedEconSlim[, 2:8])
Description <- c("Consumer Price Index for All Urban Consumers: All Items",
"Personal Consumption Expenditures: Chain-type Price Index (PCEPI), (monthly, seasonally adjusted)"
"Effective Federal Funds Rate (daily)",
"Effective Federal Funds Rate (monthly)",
"GDPDEF = Gross Domestic Product: Implicit Price Deflator",
"GDPC96 = Real Gross Domestic Product, 3 Decimal",
"U6RATE = Total unemployed, plus all marginally attached workers plus total employed part time for economic reasons)")
Source <- "FRED: http://research.stlouisfed.org/fred2/"
VarList <- cbind(ColNames, Description, Source)
VarList <- xtable(VarList)
Table <- print(VarList, type = "html")
cat("#Variable Label and Descriptions For Economic Data", Table,
file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/EconDataDescription.md")
ColNames <- names(CombinedEconSlim[, 2:8])
Description <- c("Consumer Price Index for All Urban Consumers: All Items",
"Personal Consumption Expenditures: Chain-type Price Index (PCEPI), (monthly, seasonally adjusted)",
"Effective Federal Funds Rate (daily)",
"Effective Federal Funds Rate (monthly)",
"GDPDEF = Gross Domestic Product: Implicit Price Deflator",
"GDPC96 = Real Gross Domestic Product, 3 Decimal",
"U6RATE = Total unemployed, plus all marginally attached workers plus total employed part time for economic reasons)")
Source <- "FRED: http://research.stlouisfed.org/fred2/"
VarList <- cbind(ColNames, Description, Source)
VarList <- xtable(VarList)
Table <- print(VarList, type = "html")
cat("#Variable Label and Descriptions For Economic Data", Table,
file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/EconDataDescription.md")
##############
# Download econ data and save as monthly data file.
# Christopher Gandrud
# 30 May 2013
##############
# Packages
library(quantmod)
library(xts)
library(plyr)
library(DataCombine)
library(xtable)
# Download data
## CPIAUCNS = Consumer Price Index for All Urban Consumers: All Items
## PCEPI = Personal Consumption Expenditures: Chain-type Price Index (PCEPI), Monthly, Seasonally Adjusted
## INTDSRUSM193N = Interest Rates, Discount Rate for United States
## DFF = Effective Federal Funds Rate (daily)
## FEDFUNDS = Effective Federal Funds Rate (monthly)
## GDPDEF = Gross Domestic Product: Implicit Price Deflator
## GDPC96 = Real Gross Domestic Product, 3 Decimal
## U6RATE = Total unemployed, plus all marginally attached workers plus total employed part time for economic reasons
##
##
Symbols <- c("CPIAUCNS", "PCEPI", "INTDSRUSM193N", "DFF", "FEDFUNDS", "GDPDEF", "GDPC96", "U6RATE")
getSymbols(Symbols, src = "FRED")
# Convert to data frames
# Function partially based on: http://stackoverflow.com/questions/4368861/r-converting-xts-or-zoo-object-to-a-data-frame
ToDF <- function(x){
getSymbols(x, src = "FRED")
First <- x[1]
for (i in x){
TempDF <- get(i)
if (i == First){
mthlySumm <- apply.monthly(TempDF, mean)
DateField <- index(TempDF)
TempData <- data.frame(DateField, TempDF)
}
else if (i != First){
mthlySumm <- apply.monthly(TempDF, mean)
DateField <- index(TempDF)
TempDataMore <- data.frame(DateField, TempDF)
TempData <- merge(TempData, TempDataMore, by = "DateField", all = TRUE)
}
}
TempData
}
CombinedEcon <- ToDF(Symbols)
# Keep the first day of the month
CombinedEcon$First <- grepl("-01$", as.character(CombinedEcon[, 1]))
CombinedEconSlim <- subset(CombinedEcon, First == TRUE)
Vars <- c("DateField", Symbols)
CombinedEconSlim <- CombinedEconSlim[, Vars]
# Extend quarterly variables through the quarter
Quart <- function(data, Var){
TempPos <- match(Var, names(data))
Variable <- data[, TempPos]
Q2 <- c(NA, Variable[-length(Variable)])
Q3 <- c(NA, Q2[-length(Variable)])
LagsDF <- data.frame(data[, 1], Q2, Q3)
names(LagsDF) <- c("DateField", "Q2", "Q3")
TempComb <- FillIn(data, LagsDF, Var1 = Var, Var2 = "Q2", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb <- FillIn(TempComb, LagsDF, Var1 = Var, Var2 = "Q3", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb
}
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPC96")
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPDEF")
# Create Year-on-Year percent change variables
YearChange <- function (data, Var, NewVar)
{
Temp <- slide(data = data, Var = Var, slideBy = - 12)
Temp$TempVar <- ((Temp[, Var] - Temp[, length(Temp)])/Temp[, Var]) * 100
RMVar <- length(Temp) - 1
Temp <- Temp[, -RMVar]
Temp <- rename(Temp, c("TempVar" = NewVar))
Temp
}
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "CPIAUCNS", NewVar = "CPIAUCNSPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "PCEPI",
NewVar = "PCEPIPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "GDPC96",
NewVar = "GDPC96Percent")
View(CombinedEconSlim)
##############
# Download econ data and save as monthly data file.
# Christopher Gandrud
# 30 May 2013
##############
# Packages
library(quantmod)
library(xts)
library(plyr)
library(DataCombine)
library(xtable)
# Download data
## CPIAUCNS = Consumer Price Index for All Urban Consumers: All Items
## PCEPI = Personal Consumption Expenditures: Chain-type Price Index (PCEPI), Monthly, Seasonally Adjusted
## INTDSRUSM193N = Interest Rates, Discount Rate for United States
## DFF = Effective Federal Funds Rate (daily)
## FEDFUNDS = Effective Federal Funds Rate (monthly)
## GDPDEF = Gross Domestic Product: Implicit Price Deflator
## GDPC96 = Real Gross Domestic Product, 3 Decimal
## U6RATE = Total unemployed, plus all marginally attached workers plus total employed part time for economic reasons
##
##
Symbols <- c("CPIAUCNS", "PCEPI", "INTDSRUSM193N", "DFF", "FEDFUNDS", "GDPDEF", "GDPC96", "U6RATE")
getSymbols(Symbols, src = "FRED")
# Convert to data frames
# Function partially based on: http://stackoverflow.com/questions/4368861/r-converting-xts-or-zoo-object-to-a-data-frame
ToDF <- function(x){
getSymbols(x, src = "FRED")
First <- x[1]
for (i in x){
TempDF <- get(i)
if (i == First){
mthlySumm <- apply.monthly(TempDF, mean)
DateField <- index(TempDF)
TempData <- data.frame(DateField, TempDF)
}
else if (i != First){
mthlySumm <- apply.monthly(TempDF, mean)
DateField <- index(TempDF)
TempDataMore <- data.frame(DateField, TempDF)
TempData <- merge(TempData, TempDataMore, by = "DateField", all = TRUE)
}
}
TempData
}
CombinedEcon <- ToDF(Symbols)
# Keep the first day of the month
CombinedEcon$First <- grepl("-01$", as.character(CombinedEcon[, 1]))
CombinedEconSlim <- subset(CombinedEcon, First == TRUE)
Vars <- c("DateField", Symbols)
CombinedEconSlim <- CombinedEconSlim[, Vars]
# Extend quarterly variables through the quarter
Quart <- function(data, Var){
TempPos <- match(Var, names(data))
Variable <- data[, TempPos]
Q2 <- c(NA, Variable[-length(Variable)])
Q3 <- c(NA, Q2[-length(Variable)])
LagsDF <- data.frame(data[, 1], Q2, Q3)
names(LagsDF) <- c("DateField", "Q2", "Q3")
TempComb <- FillIn(data, LagsDF, Var1 = Var, Var2 = "Q2", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb <- FillIn(TempComb, LagsDF, Var1 = Var, Var2 = "Q3", KeyVar = "DateField")
TempComb <- TempComb[, -2]
TempComb
}
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPC96")
CombinedEconSlim <- Quart(CombinedEconSlim, "GDPDEF")
# Create Year-on-Year percent change variables
YearChange <- function (data, Var, NewVar)
{
Temp <- slide(data = data, Var = Var, slideBy = - 12)
Temp$TempVar <- ((Temp[, Var] - Temp[, length(Temp)])/Temp[, Var]) * 100
RMVar <- length(Temp) - 1
Temp <- Temp[, -RMVar]
Temp <- rename(Temp, c("TempVar" = NewVar))
Temp
}
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "CPIAUCNS", NewVar = "CPIAUCNSPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "PCEPI",
NewVar = "PCEPIPercent")
CombinedEconSlim <- YearChange(data = CombinedEconSlim,
Var = "GDPC96",
NewVar = "GDPC96Percent")
# Save as EconData.csv
write.csv(CombinedEconSlim,
file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/FREDEconData.csv")
####----------- Variable Description Table ----------####
ColNames <- names(CombinedEconSlim[, 2:9])
Description <- c("Consumer Price Index for All Urban Consumers: All Items",
"Personal Consumption Expenditures: Chain-type Price Index (PCEPI), (monthly, seasonally adjusted)",
"Interest Rates, Discount Rate for United States",
"Effective Federal Funds Rate (daily)",
"Effective Federal Funds Rate (monthly)",
"GDPDEF = Gross Domestic Product: Implicit Price Deflator",
"GDPC96 = Real Gross Domestic Product, 3 Decimal",
"U6RATE = Total unemployed, plus all marginally attached workers plus total employed part time for economic reasons)")
Source <- "FRED: http://research.stlouisfed.org/fred2/"
VarList <- cbind(ColNames, Description, Source)
VarList <- xtable(VarList)
Table <- print(VarList, type = "html")
cat("#Variable Label and Descriptions For Economic Data", Table,
file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/EconDataDescription.md")
###############
# Changepoint Play 2 (Using MultiVariate)
# Christopher Gandrud
# 30 May 2013
###############
# Load packages
library(digest)
library(devtools)
# Load e.divGG function
source_gist("5675688")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
MainMonth <- read.csv("MainMonth.csv")
# Drop if no hearings
MainMonth <- MainMonth[-1:-2, ]
MainMonth <- MainMonth[-193:-197, ]
# Scrutiny Change Point
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF", "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
# Economic Indications Change Point
names(MainMonth)
###############
# Clean Congressional Testimony Laughter Data
# Christopher Gandrud
# 29 May 2013
###############
library(lubridate)
library(DataCombine)
library(plyr)
library(digest)
library(devtools)
# Load quarter_year
source_gist("5500733")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### --------- Clean ----------------------------------------- ####
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Field.hearing", "Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Field", "Oversight")
# Convert NA to 0 for Oversight/Field
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
LDataSub$Field[is.na(LDataSub$Field)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub$DateStandard), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### ------------ Per Month ------------------------------------ ####
# Median members per month
LDM <- LDataSub
# Create MonthYear variable
LDM$MonthYear <- floor_date(LDM$DateStandard, "month")
# Medians
LDM <- ddply(LDM, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LDM <- ddply(LDM, .(MonthYear), transform, LaughMedian = median(LaughCount))
# Means
LDM <- ddply(LDM, .(MonthYear), transform, MembPresMean = mean(MembersPres))
LDM <- ddply(LDM, .(MonthYear), transform, LaughMean = mean(LaughCount))
LDM$Dummy <- 1
LDM <- ddply(LDM, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LDM[!duplicated(LDM[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "MembPresMean",
"LaughMean", "TestCountMonth")]
#### Excluding Field hearings ####
LDNoF <- subset(LDM, Field == 0)
# Median
LDNoF <- ddply(LDNoF, .(MonthYear), transform, MembPresMedianNoF = median(MembersPres))
LDNoF <- ddply(LDNoF, .(MonthYear), transform, LaughMedianNoF = median(LaughCount))
# Mean
LDNoF <- ddply(LDNoF, .(MonthYear), transform, MembPresMeanNoF = mean(MembersPres))
LDNoF <- ddply(LDNoF, .(MonthYear), transform, LaughMeanNoF = mean(LaughCount))
LDNoF$Dummy <- 1
LDNoF <- ddply(LDNoF, .(MonthYear), transform, TestCountMonthNoF = sum(Dummy))
# Create Month Only data
LDNoF <- LDNoF[!duplicated(LDNoF[, "MonthYear"]), ]
# Clean up
LDNoF <- LDNoF[, c("MonthYear", "MembPresMedianNoF",
"LaughMedianNoF", "MembPresMeanNoF",
"LaughMeanNoF", "TestCountMonthNoF")]
# Merge no Field with full Field
LDMonth <- merge(LDMonth, LDNoF, by = "MonthYear")
#### ------------ Per Quarter ---------------------------------- ####
# Drop non-fully observed quarters
LDQt <- LDataSub[c(-1, -2), ]
# Create Quarter variable
LDQt$Quarter <- quarter_year(LDQt[, "DateStandard"], with_year = TRUE)
# Median
LDQt <- ddply(LDQt, .(Quarter), transform, MembPresMedian = median(MembersPres))
LDQt <- ddply(LDQt, .(Quarter), transform, LaughMedian = median(LaughCount))
LDQt$Dummy <- 1
LDQt <- ddply(LDQt, .(Quarter), transform, TestCountQuarter = sum(Dummy))
LDQt <- ddply(LDQt, .(Quarter), transform, FieldCountQuarter = sum(Field))
# Create Month Only data
LDQt <- LDQt[!duplicated(LDQt[, "Quarter"]), ]
# Clean up
LDQt <- LDQt[, c("Quarter", "MembPresMedian",
"LaughMedian", "TestCountQuarter", "FieldCountQuarter")]
#### ------------ Merge Month Data with economic data --------------------- ####
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData$MonthYear <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
# Merge
CombinedMonth <- merge(LDMonth, EconData, by = "MonthYear", all = TRUE)
# Clean combined
CombinedMonth$TestCountMonth[is.na(CombinedMonth$TestCountMonth)] <- 0
CombinedMonth$LaughMedian[is.na(CombinedMonth$LaughMedian)] <- 0
CombinedMonth$MembPresMedian[is.na(CombinedMonth$MembPresMedian)] <- 0
CombinedMonth$LaughMean[is.na(CombinedMonth$LaughMean)] <- 0
CombinedMonth$MembPresMean[is.na(CombinedMonth$MembPresMean)] <- 0
CombinedMonth$TestCountMonthNoF[is.na(CombinedMonth$TestCountMonthNoF)] <- 0
CombinedMonth$LaughMedianNoF[is.na(CombinedMonth$LaughMedianNoF)] <- 0
CombinedMonth$MembPresMedianNoF[is.na(CombinedMonth$MembPresMedianNoF)] <- 0
CombinedMonth$LaughMeanNoF[is.na(CombinedMonth$LaughMeanNoF)] <- 0
CombinedMonth$MembPresMeanNoF[is.na(CombinedMonth$MembPresMeanNoF)] <- 0
#### ---- Save ---- ####
write.csv(CombinedMonth, file = "MainMonth.csv")
write.csv(LDQt, file = "MainQuarter.csv")
###############
# Changepoint Play 2 (Using MultiVariate)
# Christopher Gandrud
# 30 May 2013
###############
# Load packages
library(digest)
library(devtools)
# Load e.divGG function
source_gist("5675688")
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
MainMonth <- read.csv("MainMonth.csv")
# Drop if no hearings
MainMonth <- MainMonth[-1:-2, ]
MainMonth <- MainMonth[-193:-197, ]
# Scrutiny Change Point
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF", "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
# Economic Indications Change Point
names(MainMonth)
EconVars <- c("CPIAUCNSPercent", "PCEPIPercent", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF", "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.1, R = 799, min.size = 12)
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.2, R = 799, min.size = 12)
?e.divisive
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.1, R = 799, min.size = 24)
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
EconVars <- c("PCEPIPercent", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 2)
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("TestCountMonthNoF",  "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("MembPresMeanNoF", "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("MembPresMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("MembPresMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
EconVars <- c("PCEPIPercent", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
EconVars <- c("PCEPIPercent", "U6RATE", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
EconVars <- c("U6RATE", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
names(MainMonth)
EconVars <- c("PCEPIPercent", "GDPC96Percent")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
ScrutVars <- c("TestCountMonthNoF", "MembPresMeanNoF", "LaughMeanNoF")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
MainMonth <- rename(MainMonth, c("TestCountMonthNoF" = "Hearings",
"MembPresMeanNoF" = "Attendance",
"LaughMeanNoF" = "Laughter",
"U6RATE" = "Unemployment",
"GDPC96Percent" = "Growth",
"PCEPIPercent" = "Inflation"))
names(MainMonth)
ScrutVars <- c("Hearings", "Attendance", "Laughter")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 12)
EconVars <- c("Unemployment", "Growth")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
EconVars <- c("Inflation", "Growth")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 24)
sig.lvl = 0.05, R = 799, min.size = 24)
sig.lvl = 0.05, R = 799, min.size = 24)
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 16)
EconVars <- c("Inflation", "Unemployment", "Growth")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 16)
sig.lvl = 0.05, R = 799, min.size = 16)
sig.lvl = 0.05, R = 799, min.size = 16)
ScrutVars <- c("Hearings", "Attendance", "Laughter")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 6)
ScrutVars <- c("Hearings", "Attendance", "Laughter")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 3)
ScrutVars <- c("Hearings", "Attendance", "Laughter")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 2)
EconVars <- c("Inflation", "Unemployment", "Growth")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 16)
View(MainMonth)
EconVars <- c("Inflation", "Unemployment")
e.divGG(data = MainMonth, Vars = EconVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 16)
ScrutVars <- c("Hearings", "Attendance")
e.divGG(data = MainMonth, Vars = ScrutVars, TimeVar = "MonthYear",
sig.lvl = 0.05, R = 799, min.size = 2)
?e.divisive
