for (i in Addresses){
FedTextMay <- getURL(i)
}
fix(addresses)
for (i in Addresses){
FedTextMay <- getURL(i)
}
library(RCurl)
library(XML)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses){
FedTextMay <- getURL(i)
}
i
FedTextMay <- getURL("http://www.federalreserve.gov/boarddocs/speeches/1996/19960613.htm")
for (i in Addresses){
FedTextMay <- getURL("http://www.federalreserve.gov/boarddocs/speeches/1996/19960613.htm")
}
library(RCurl)
library(XML)
#######################
## CSV file with Fed governor speech URLs
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses){
FedTextMay <- getURL(i)
}
library(RCurl)
library(XML)
#######################
## CSV file with Fed governor speech URLs
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses){
FedTextMay <- getURL(i)
}
for (i in Addresses){
FedTextMay <- getURL(i)
}
library(httr)
?GET
for (i in Addresses){
FedTextMay <- GET(i)
}
library(RCurl)
library(XML)
#######################
## CSV file with Fed governor speech URLs
library(httr)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses){
FedTextMay <- GET(i)
}
library(httr)
library(XML)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses){
FedTextMay <- GET(i)
}
FedTextDF <- as.data.frame(FedTextMay)
?stop_for_status
stop_for_status(FedTextMay)
?writeBin
temp_file <- tempfile()
on.exit(unlink(temp_file))
writeBin(content(FedTextMay, type = "text"), temp_file)
Test <- data.frame(temp_file)
View(Test)
fix(FedTextMay)
writeBin(content(FedTextMay, type = "raw"), temp_file)
Test <- data.frame(temp_file)
View(Test)
writeBin(content(FedTextMay, type = "raw"), Test)
FedTextDF <- data.frame(FedTextMay)
library(RCurl)
for (i in Addresses){
F1edTextMay <- getURL(i)
}
for (i in Addresses){
FedTextMay1 <- getURL(i)
}
library(RCurl)
library(XML)
library(XML)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
temp_file <- tempfile()
on.exit(unlink(temp_file))
library(httr)
for (i in Addresses){
FedTextMay1 <- GET(i)
}
stop_for_status(FedTextMay)
stop_for_status(FedTextMay1)
writeBin(content(FedTextMay1, type = "raw"), temp_file)
Test <- data.frame(temp_file)
View(Test)
fix(FedTextMay1)
for (i in Addresses){
FedTextMay1 <- getURl(i)
}
for (i in Addresses){
FedTextMay1 <- getURL(i)
}
for (i in Addresses[1:500]){
FedTextMay1 <- getURL(i)
}
library(RCurl)
library(XML)
#######################
## CSV file with Fed governor speech URLs
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses[1:500]){
FedTextMay1 <- getURL(i)
}
library(RCurl)
library(XML)
#######################
## CSV file with Fed governor speech URLs
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
for (i in Addresses[1:500]){
FedTextMay1 <- getURL(i)
}
for (i in Addresses[1:20]){
FedTextMay1 <- getURL(i)
}
fix(Addresses)
for (i in Addresses[1:20]){
FedTextMay1 <- getURL(i)
}
FedTextDF <- as.data.frame(FedTextMay1)
View(SpeechesData)
View(FedTextDF)
View(FedTextDF)
FedTextMay <- vector()
for (i in Addresses[1:20]){
FedTextMay[i] <- getURL(i)
}
for (i in Addresses[1:20]){
FedTextMay[i] <- getURL(i)
}
install_github("scraply", "abelsonlive")
library(devtools)
library(devtools)
install_github("scraply", "abelsonlive")
install_github("scraply", "abelsonlive")
install_github("scraply", "abelsonlive")
library(devtools)
install_github("scraply", "abelsonlive")
install_github("scraply", "christophergandrud")
install_github("scraply", "christophergandrud")
library(scraply)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
FedTextMay <- vector()
Test <- scraply(Addresses)
?scraply
Test <- scraply(Addresses, sleep = 1)
Test <- scraply(Addresses, sleep = 1)
Test <- scraply(Addresses, sleep = 1)
library(scraply)
Test <- scraply(Addresses, sleep = 1)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
Test <- scraply(Addresses, sleep = 1)
library(scraply)
SpeechesData <- read.csv("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/FedSpeechesVersionMay2013.csv")
Addresses <- as.character(SpeechesData[, "vars.link"])
Test <- scraply(Addresses, sleep = 1)
Test <- scraply(Addresses, htmlParse, sleep = 1)
Test <- scraply(Addresses, htmlParse, sleep = 1)
library(plyr)
library(DataCombine)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
####-------- Testimony & Speeches Count ------------####
# Load testimony per month
TestCount <- read.csv("TestimonyPerMonth.csv")
# Clean
TestCount <- rename(TestCount, c("MonthYear" = "DateField"))
TestCount <- TestCount[, -1]
# Add lag variables
TestCount <- slide(TestCount, Var = "TestMonthTotal", slideBy = -1)
names(TestCount)
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = -1)
View(TestCount)
-1:-3
TestCount <- read.csv("TestimonyPerMonth.csv")
# Clean
TestCount <- rename(TestCount, c("MonthYear" = "DateField"))
TestCount <- TestCount[, -1]
# Add lag variables
for (i in -1:-3){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
View(TestCount)
for (i in 1:3){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
####-------- Testimony & Speeches Count ------------####
# Load testimony per month
TestCount <- read.csv("TestimonyPerMonth.csv")
# Clean
TestCount <- rename(TestCount, c("MonthYear" = "DateField"))
TestCount <- TestCount[, -1]
# Add lag variables
for (i in -1:-3){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
# Add lead variables
## Note: Currently assume that all testimony for the following two months is known.
for (i in 1:2){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
View(TestCount)
?shift
EconData <- read.csv("FREDEconData.csv")
EconData <- EconData[, -1]
View(EconData)
names(EconData)
?mapply
EconVars <- names(EconVars[, -1])
EconVars <- names(EconData[, -1])
fix(EconVars)
EconData <- read.csv("FREDEconData.csv")
EconData <- EconData[, -1]
# Add lag variables
EconVars <- names(EconData[, -1])
for (u in EconVars){
for (i in -1:-2){
EconData <- slide(EconData, Var = u, slideBy = i)
}
}
View(EconData)
Combined <- merge(TestCount, EconData, by = "DateField")
View(Combined)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
OrgData <- read.csv("BaseSpeechCount.csv")
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
# Load data
OrgData <- read.csv("BaseSpeechCount.csv")
OrgData$full_date <- as.character(OrgData$full_date)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
OrgData <- read.csv("BaseSpeechCount.csv")
OrgData$full_date <- as.character(OrgData$full_date)
View(OrgData)
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
View(OrgData)
library(lubridate)
library(plyr)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
# Load data
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
library(DataCombine)
OrgData$Date <- dmy(OrgData$full_date)
OrgData$MonthYear <- floor_date(OrgData$Date, "month")
?MoveFront
OrgData <- MoveFront(OrgData, "MonthYear")
View(OrgData)
View(Combined)
FrontVars <- c("Data", "DateField")
/
/
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
# Load data
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
# Create DateField variable
# Find month and quarter variables
OrgData$Date <- dmy(OrgData$full_date)
OrgData$DateField <- floor_date(OrgData$Date, "month")
FrontVars <- c("Data", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
FrontVars
View(OrgData)
FrontVars <- c("Date", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
RemoveVars <- c("full_date", "link.vars")
rev(RemoveVars)
RemoveVars <- c("full_date", "link.vars")
for (i in RemoveVars){
OrgData <- OrgData[, -i]
}
for (i in RemoveVars){
OrgData <- OrgData[, -parse(i)]
}
for (i in RemoveVars){
OrgData <- OrgData[, -eval(i)]
}
for (i in RemoveVars){
OrgData <- OrgData[, -parse(eval(i))]
}
for (i in RemoveVars){
OrgData <- OrgData[, -parse(eval(text = i))]
}
?eval
View(OrgData)
for (i in RemoveVars){
OrgData <- OrgData[, -eval(parse(i))]
}
for (i in RemoveVars){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
names(OrgData)
RemoveVars <- c("full_date", "link.vars")
for (i in RemoveVars){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
Matched <- match(RemoveVars, OrgData)
for (i in Matched){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
Matched <- match(RemoveVars, OrgData)
fix(Matched)
Matched <- match(RemoveVars, names(OrgData))
for (i in Matched){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
Matched <- match(RemoveVars, names(OrgData))
fix(Matched)
RemoveVars <- c("full_date", "link.vars")
names(OrgData)
match("org", names(OrgData))
fix(RemoveVars)
Matched <- match(RemoveVars, names(OrgData))
fix(Matched)
RemoveVars <- c("full_date", "link.vars")
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
# Load data
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
# Create DateField variable
# Find month and quarter variables
OrgData$Date <- dmy(OrgData$full_date)
OrgData$DateField <- floor_date(OrgData$Date, "month")
FrontVars <- c("Date", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
# Remove unwanted variables
RemoveVars <- c("full_date", "link.vars")
Matched <- match(RemoveVars, names(OrgData))
fix(Matched)
RemoveVars <- c("full_date", "vars.link")
Matched <- match(RemoveVars, names(OrgData))
for (i in Matched){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
View(EconData)
View(OrgData)
for (i in Matched){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
names(OrgData)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
# Load data
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
# Create DateField variable
# Find month and quarter variables
OrgData$Date <- dmy(OrgData$full_date)
OrgData$DateField <- floor_date(OrgData$Date, "month")
FrontVars <- c("Date", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
# Remove unwanted variables
RemoveVars <- c("full_date", "vars.link")
Matched <- match(RemoveVars, names(OrgData))
for (i in Matched){
OrgData <- eval(parse(text = paste0("OrgData[, -", i, "]")))
}
View(OrgData)
for (i in Matched){
OrgData <- OrgData[, -i]
}
View(OrgData)
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
# Create DateField variable
# Find month and quarter variables
OrgData$Date <- dmy(OrgData$full_date)
OrgData$DateField <- floor_date(OrgData$Date, "month")
FrontVars <- c("Date", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
# Remove unwanted variables
RemoveVars <- c("full_date", "vars.link")
Matched <- match(RemoveVars, names(OrgData))
for (i in Matched){
OrgData <- OrgData[, -i]
}
View(OrgData)
OrgData <- OrgData[, -"full_date"]
OrgData <- OrgData[, -c("full_date")]
for (i in RemoveVars){
Pos <- match(i, OrgData)
OrgData <- OrgData[, -Pos]
}
?remove.vars
library(gdata)
?remove.vars
OrgData <- remove.vars(OrgData, RemoveVars)
View(OrgData)
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/Raw/")
# Load data
OrgData <- read.csv("FedSpeechesVersionMay2013.csv")
OrgData$full_date <- as.character(OrgData$full_date)
# Create DateField variable
# Find month and quarter variables
OrgData$Date <- dmy(OrgData$full_date)
OrgData$DateField <- floor_date(OrgData$Date, "month")
FrontVars <- c("Date", "DateField")
for (i in FrontVars){
OrgData <- MoveFront(OrgData, i)
}
# Remove unwanted variables
RemoveVars <- c("full_date", "vars.link")
OrgData <- remove.vars(OrgData, RemoveVars)
# Save
write.csv(OrgData, file = "~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/SpeechBaseData.csv")
library(plyr)
library(DataCombine)
library(lubridate)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
####-------- Testimony & Speeches Count ------------####
# Load testimony per month
TestCount <- read.csv("TestimonyPerMonth.csv")
# Clean
TestCount <- rename(TestCount, c("MonthYear" = "DateField"))
TestCount <- TestCount[, -1]
# Add lag variables
for (i in -1:-3){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
# Add lead variables
## Note: Currently assume that all testimony for the following two months is known.
for (i in 1:2){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
####-------- EconData -----------------------------####
EconData <- read.csv("FREDEconData.csv")
EconData <- EconData[, -1]
# Add lag variables
EconVars <- names(EconData[, -1])
for (u in EconVars){
for (i in -1:-2){
EconData <- slide(EconData, Var = u, slideBy = i)
}
}
####-------- Speeches Orgs -----------------------####
SpeechBase <- read.csv("SpeechBase.csv")
SpeechBase <- read.csv("SpeechBaseData.csv")
View(SpeechBase)
SpeechBase <- SpeechBase[, -1]
Combined <- merge(SpeechBase, Combined, by = "DateField")
############
# Merge Data by quarter
# Christopher Gandrud
# 21 May 2013
############
# Packages
library(plyr)
library(DataCombine)
library(lubridate)
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data/")
####-------- Testimony & Speeches Count ------------####
# Load testimony per month
TestCount <- read.csv("TestimonyPerMonth.csv")
# Clean
TestCount <- rename(TestCount, c("MonthYear" = "DateField"))
TestCount <- TestCount[, -1]
# Add lag variables
for (i in -1:-3){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
# Add lead variables
## Note: Currently assume that all testimony for the following two months is known.
for (i in 1:2){
TestCount <- slide(TestCount, Var = "MonthTestTotal", slideBy = i)
}
####-------- EconData -----------------------------####
EconData <- read.csv("FREDEconData.csv")
EconData <- EconData[, -1]
# Add lag variables
EconVars <- names(EconData[, -1])
for (u in EconVars){
for (i in -1:-2){
EconData <- slide(EconData, Var = u, slideBy = i)
}
}
####-------- Speeches Orgs -----------------------####
SpeechBase <- read.csv("SpeechBaseData.csv")
SpeechBase <- SpeechBase[, -1]
####-------- Merge -------------------------------####
Combined <- merge(TestCount, EconData, by = "DateField")
Combined <- merge(SpeechBase, Combined, by = "DateField")
View(Combined)
View(EconData)
