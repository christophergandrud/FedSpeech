LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
EconData <- read.csv("FREDEconData.csv")
names(EconData)
library(plyr)
?rename
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
head(EconData)
View(LDMonth)
?dd
EconData <- EconData[year(MonthYear) < 1997 & month(MonthYear) < 3]
EconData$MonthYear <- ymd(EconData$MonthYear)
EconData$MonthYear <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(MonthYear) < 1997 & month(MonthYear) < 3]
EconData <- EconData[year(EconData$MonthYear) < 1997 & month(EconData$MonthYear) < 3]
EconData <- EconData[year(EconData$MonthYear) < 1997 & month(EconData$MonthYear) < 3,]
View(EconData)
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData <- EconData[year(EconData$MonthYear) < 1997,]
View(EconData)
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
View(EconData)
Combined <- merge (LDMonth, EconData, by = "MonthYear", all = TRUE)
View(Combined)
View(EconData)
###############
# Clean Congressional Testimony Laughter Data
# Christopher Gandrud
# 27 May 2013
###############
library(lubridate)
library(DataCombine)
library(plyr)
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### Per Month ####
# Median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
LD$Dummy <- 1
LD <- ddply(LD, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### Merge with economic data ####
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
Combined <- merge (LDMonth, EconData, by = "MonthYear", all = TRUE)
View(Combined)
EconData <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData$MonthYear <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
# Merge
Combined <- merge (LDMonth, EconData, by = "MonthYear", all = TRUE)
View(Combined)
ChangeCount <- cpt.meanvar(Combined$Test, method = "BinSeg")
ChangeCount <- cpt.meanvar(Combined$Test, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month")
names(Combined)
Combined$TestCountMonth[is.na(Combined$TestCountMonty)] <- 0
###############
# Clean Congressional Testimony Laughter Data
# Christopher Gandrud
# 27 May 2013
###############
library(lubridate)
library(DataCombine)
library(plyr)
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### Per Month ####
# Median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
LD$Dummy <- 1
LD <- ddply(LD, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### Merge with economic data ####
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData$MonthYear <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
# Merge
Combined <- merge (LDMonth, EconData, by = "MonthYear", all = TRUE)
Combined$TestCountMonth[is.na(Combined$TestCountMonty)] <- 0
Combined$TestCountMonth[is.na(Combined$TestCountMonty)] <- 0
View(Combined)
Combined$TestCountMonth[is.na(Combined$TestCountMonth)] <- 0
View(Combined)
ChangeCount <- cpt.meanvar(Combined$TestCountMonth, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month")
Combined$LaughMedian[is.na(Combined$LaughMedian)] <- 0
Combined$MembPresMedian[is.na(Combined$MembPresMedian)] <- 0
ChangeLaugh <- cpt.meanvar(Combined$LaughMedian)
plot(ChangeLaugh, ylab = "Monthly Median Laughter")
ChangePres <- cpt.mean(Combined$MembPresMedian, method = "BinSeg")
plot(ChangePres, ylab = "Monthly Median Attendance")
plot(ChangeCount, ylab = "Number of Hearings per Month")
?ts
Combined <- ts(Combined, start = Combined[1,1])
Combined[1,1]
Combined <- ts(Combined, start = 1997, end = 2013)
ChangeCount <- cpt.meanvar(Combined$TestCountMonth, method = "BinSeg")
fix(Combined)
###############
# Clean Congressional Testimony Laughter Data
# Christopher Gandrud
# 27 May 2013
###############
library(lubridate)
library(DataCombine)
library(plyr)
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
# Import data
LData <- read.csv("Raw/MonetaryPolicyChron.csv")
#### Clean
LDataSub <- LData[, c("Date", "Laughter.Count", "Members.Present",
"Fed.SemiAnnual.Oversight.Hearing")]
names(LDataSub) <- c("Date", "LaughCount", "MembersPres", "Oversight")
# Convert NA to 0 for Oversight
LDataSub$Oversight[is.na(LDataSub$Oversight)] <- 0
# Clean date
LDataSub$DateStandard <- dmy(as.character(LDataSub$Date))
LDataSub <- LDataSub[order(LDataSub[, 5]), ]
LDataSub$LaughCount <- as.numeric(LDataSub$LaughCount)
LDataSub$MembersPres <- gsub("[a-zA-Z]", NA, LDataSub$MembersPres)
LDataSub$MembersPres <- as.numeric(LDataSub$MembersPres)
LDataSub <- DropNA(LDataSub, "MembersPres")
LDataSub <- DropNA(LDataSub, "LaughCount")
#### Per Month ####
# Median members per month
library(plyr)
# Create MonthYear variable
LD$MonthYear <- floor_date(LD$DateStandard, "month")
LD <- ddply(LD, .(MonthYear), transform, MembPresMedian = median(MembersPres))
LD <- ddply(LD, .(MonthYear), transform, LaughMedian = median(LaughCount))
LD$Dummy <- 1
LD <- ddply(LD, .(MonthYear), transform, TestCountMonth = sum(Dummy))
# Create Month Only data
LDMonth <- LD[!duplicated(LD[, "MonthYear"]), ]
# Clean up
LDMonth <- LDMonth[, c("MonthYear", "MembPresMedian",
"LaughMedian", "TestCountMonth")]
#### Merge with economic data ####
EconData <- read.csv("FREDEconData.csv")
# Clean
EconData <- EconData[, -1]
EconData <- rename(EconData, c("DateField" = "MonthYear"))
EconData$MonthYear <- ymd(as.character(EconData$MonthYear))
EconData <- EconData[year(EconData$MonthYear) >= 1997,]
# Merge
Combined <- merge (LDMonth, EconData, by = "MonthYear", all = TRUE)
# Clean combined
Combined$TestCountMonth[is.na(Combined$TestCountMonth)] <- 0
Combined$LaughMedian[is.na(Combined$LaughMedian)] <- 0
Combined$MembPresMedian[is.na(Combined$MembPresMedian)] <- 0
getwd()
write.csv(Combined, file = "Main.csv")
library(changepoint)
# Set working directory
setwd("~/Dropbox/Fed_Speeches_Paper/FedSpeech/Data")
Main <- read.csv("Main.csv")
attach(Main)
MembersHearnings <- MembPresMedian/TestCountMonth
detach(Main)
attach(Main)
MembersHearings <- MembPresMedian/TestCountMonth
detach(Main)
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
fix(MembersHearings)
0/12
View(Main)
0/0
fix(MembersHearings)
?is.NaN
is.finite
?is.finite
MembersHearings[NaN(MembersHearings)] <- 0
MembersHearings[is.nan(MembersHearings)] <- 0
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
plot(ChangPresTest)
plot(ChangePresTest)
View(Main)
Main <- Main[-193:-197, ]
attach(Main)
MembersHearings <- MembPresMedian/TestCountMonth
detach(Main)
MembersHearings[is.nan(MembersHearings)] <- 0
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
plot(ChangePresTest)
View(Main)
fix(MembersHearings)
fix(MembersHearings)
ChangeCount <- cpt.meanvar(Main$TestCountMonth, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month")
ChangePres <- cpt.mean(Main$MembPresMedian, method = "BinSeg")
plot(ChangePres, ylab = "Monthly Median Attendance")
ChangePresTest <- cpt.mean(MembersHearings, method = "PELT")
plot(ChangePresTest)
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
plot(ChangePresTest)
MembersTS <- ts(MembersHearings, start = 1997)
ChangePresTest <- cpt.mean(MembersHearings, method = "BinSeg")
plot(ChangePresTest,)
plot(ChangePresTest)
?str
View(Main)
Main <- Main[-1:-2, ]
TestPerMonth <- ts(Main$TestCountMonth, start = c(1997, 3))
fix(TestPerMonth)
ChangeCount <- cpt.meanvar(TestPerMonth, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month")
TestPerMonth <- ts(Main$TestCountMonth, start = c(1997, 3) frequency = 12)
TestPerMonth <- ts(Main$TestCountMonth, start = c(1997, 3), frequency = 12)
ChangeCount <- cpt.meanvar(TestPerMonth, method = "BinSeg")
plot(ChangeCount, ylab = "Number of Hearings per Month")
Test <- "Test1"
c("Things", Test)
#' A function for finding quarterly sums of data.
#'
#' @param data a data frame object.
#' @param Var a character string naming the variable to sum.
#' @param TimeVar a character string name the time variable. Must be in year-month or year-month-day format
#' @param NewVar a character string specifying the name for the new variable
#'
#' @return A data frame containing two variables. One specifying the quarter. The other with the summed data.
#'
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(ddply)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Give Var a generic name
data <- rename(data, c(Var = "TempVar"))
# Find quarterly sums
TempData <- ddply(data, .(Quarter), transform, TempSum = sum(TempVar))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData$TempVar), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
View(Main)
QuartLaugh <- quarter_sum(data = Main, var = "LaughMedian", TimeVar = "MonthYear")
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Give Var a generic name
data <- rename(data, c(Var = "TempVar"))
# Find quarterly sums
TempData <- ddply(data, .(Quarter), transform, TempSum = sum(TempVar))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData$TempVar), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
QuartLaugh <- quarter_sum(data = Main, var = "LaughMedian", TimeVar = "MonthYear")
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Give Var a generic name
data <- rename(data, c(Var = "TempVar"))
# Find quarterly sums
TempData <- ddply(data, .(Quarter), transform, TempSum = sum(TempVar))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData$TempVar), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Give Var a generic name
data <- rename(data, c(Var = "TempVar"))
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
names(QuartLaugh)
?rename
eval(parse(Test))
parse(eval(Test))
parse(eval(paste0(Test)))
parse(eval(text = Test))
parse(eval(text = paste0(Test)))
eval(parse(text = Test))
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Find quarterly sums
TempData <- eval(parse(paste0("ddply(data, .(Quarter), transform, TempSum = sum(", Var, "))", )))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData[, Var]), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
#' A function for finding quarterly sums of data.
#'
#' @param data a data frame object.
#' @param Var a character string naming the variable to sum.
#' @param TimeVar a character string name the time variable. Must be in year-month or year-month-day format
#' @param NewVar a character string specifying the name for the new variable
#'
#' @return A data frame containing two variables. One specifying the quarter. The other with the summed data.
#'
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Find quarterly sums
TempData <- eval(parse(text = paste0("ddply(data, .(Quarter), transform, TempSum = sum(", Var, "))", )))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData[, Var]), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
#' A function for finding quarterly sums of data.
#'
#' @param data a data frame object.
#' @param Var a character string naming the variable to sum.
#' @param TimeVar a character string name the time variable. Must be in year-month or year-month-day format
#' @param NewVar a character string specifying the name for the new variable
#'
#' @return A data frame containing two variables. One specifying the quarter. The other with the summed data.
#'
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
# Find quarterly sums
TempData <- eval(parse(text = paste0("ddply(data, .(Quarter), transform, TempSum = sum(", Var, "))")))
TempData <- TempData[!duplicated(TempData[, Quarter], TempData[, Var]), ]
TempData <- TempData[, c("Quarter", "TempVar")]
# Name sum variable
if (!is.null(NewVar)){
names(TempData) <- c("Quarter", NewVar)
} else
return(TempData)
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
}
QuartLaugh <- quarter_sum(data = Main, Var = "LaughMedian", TimeVar = "MonthYear")
fix(QuartLaugh)
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
data <- data
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
}
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
data <- data
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
quarter_sum <- function(data, Var, TimeVar, NewVar = NULL)
{
require(plyr)
require(digest)
require(devtools)
# Requires quarter_year function
## https://gist.github.com/christophergandrud/5500733
source_gist("5500733")
data <- data
# Create quarter variable
data$Quarter <- quarter_year(data[, TimeVar], with_year = TRUE)
}
